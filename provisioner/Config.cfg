# -*- mode: ruby -*-
# # vi: set ft=ruby :

# Specify minimum Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"

# Require YAML module
require 'yaml'

# Read YAML file with box details

config_file = File.expand_path("../hosts/hosts.yml", File.dirname(__FILE__))
corebooks = File.expand_path("../corebooks", File.dirname(__FILE__))
servers = YAML.load_file(File.open(config_file))
DOMAIN = ".cheflab.dev"
# Create boxes
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Iterate through entries in YAML file
  servers.each do |servers|
    config.vm.define servers["name"] do |srv|
      srv.vm.hostname = servers["name"] + DOMAIN
      srv.vm.box = servers["box"]
      srv.vm.network "private_network", ip: servers["ip"]
      srv.vm.synced_folder ".", "/vagrant", disabled: servers["share"]
      srv.vm.synced_folder servers["cheflab_shared_conf"], "/cheflab/conf", disabled: servers["share_keys"]
      srv.vm.provider :virtualbox do |vb|
        vb.memory = servers["ram"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end
      # srv.vm.provision "file", source: "/cheflab/keys/cheflab-hosts.cfg", destination: "/etc/hosts"
			srv.vm.provision "shell", inline: "cat /cheflab/conf/cache/cheflab-hosts.cfg  > /etc/hosts"
      if servers["name"] == "cheflab-server"
          srv.vm.provision :chef_solo do |chef|
            chef.cookbooks_path = "#{corebooks}"
            chef.add_recipe "chef_server::server"
          end
      end
      if servers["name"] == "cheflab-workstation"
        srv.vm.synced_folder servers["cookbooks"], "/cheflab/cookbooks", disabled: servers["cookbooks_share"]
        srv.vm.provision :chef_solo do |chef|
          chef.cookbooks_path = "#{corebooks}"
          chef.add_recipe "chef_workstation::default"
        end
      end
    end
  end
end
